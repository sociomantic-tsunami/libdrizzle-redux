language: cpp

## Enable cache for dependencies and directories
cache: ccache

## Enable sudo
sudo: required

## Operating Systems to use for builds
os:
  - linux

dist: trusty

group: edge

## Services started on the build environment
services:
 - mysql
 - docker

## Environment variables
#
#  The 'global' section defines variables which are added to every row in the
#  build matrix, i.e. every build configuration.
#  In turn, variables defined in the 'matrix' section each triggers a separate
#  build.
#
#  Please note that test fails on first error as default
#  To skip errors and fail silently set environment variable:
#    SKIP_TEST_ON_ERROR=1
#
#  To speed up installation of brew formulas on osx auto update for homebrew is
#  turned off by setting HOMEBREW_NO_AUTO_UPDATE=1
env:
  global:
    - MYSQL_SERVER=127.0.0.1
    - MYSQL_PASSWORD=''
    - MYSQL_USER=root
    - MYSQL_PORT=3306
    - SKIP_TEST_ON_ERROR=0
    - PATH="$(git config -f .gitmodules submodule.beaver.path)/bin:$PATH"
    - MAKE_TARGET=check
    - VALID_TARGETS="check deb html epub rpm man"

  matrix:
    - CXX_NAME=g++ CC_NAME=gcc CXX_VERSION=-4.9 MAKE_TARGET="$MAKE_TARGET:deb"
    - CXX_NAME=g++ CC_NAME=gcc CXX_VERSION=-5 MAKE_TARGET="$MAKE_TARGET:html:epub:man"
    - CXX_NAME=g++ CC_NAME=gcc CXX_VERSION=-6
    - MAKE_TARGET=rpm
    - CXX_NAME=clang++ CC_NAME=clang CXX_VERSION=-3.9 MAKE_TARGET="$MAKE_TARGET:deb"
    - CXX_NAME=clang++ CC_NAME=clang CXX_VERSION=-4.0"

## Build matrix
#
#  The 'os', 'compiler' and 'env' settings are expanded into 3 jobs:
#
#  | os     | compiler    | MAKE_TARGET         |
#  |--------|-------------|---------------------|
#  | linux  | gcc   4.8   | check rpm           |
#  | linux  | gcc   4.9   | check deb           |
#  | linux  | gcc   5.x   | check html epub man |
#  | linux* | gcc   6.x   | check               |
#  | linux  | clang 3.9   | check deb           |
#  | linux  | clang 4.x   | check               |
#  | osx    | clang 6.1.0 | check               |
#  | osx    | clang 7.3.0 | check               |
#  | osx    | clang 8.1.0 | check               |
#
#  *the RPM package is built in a docker container running centos7
#
#  Notes about compiler version
#  ----------------------------
#  For linux, the compiler is the latest version on the major/minor branch
#  listed
#
#  For osx the compiler reported is the latest Apple LLVM version which is
#  included in the osx_image used as build environment, cf. the key
#  'matrix.include.osx_image' in the 'matrix'

matrix:
  fast_finish: true
  include:
    - os: osx
      osx_image: xcode6.4
      compiler: clang
      env: MAKE_TARGET=$MAKE_TARGET
    - os: osx
      osx_image: xcode7.3.1
      compiler: clang
      env: MAKE_TARGET=$MAKE_TARGET
    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: MAKE_TARGET=$MAKE_TARGET

# Addons to the build environment
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test    # Additional GCC versions
    - llvm-toolchain-precise-3.9 # clang apt repo for v3.9
    - llvm-toolchain-trusty-4.0  # clang apt repo for v4.0
    - sourceline: deb http://ppa.launchpad.net/saiarcot895/myppa/ubuntu trusty main
      key_url: http://keyserver.ubuntu.com:11371/pks/lookup?op=get&search=0xE6A17451DC058F40
    packages:
    - apt-fast                   # wrapper for apt-get with parallel downloads

## Install dependencies
before_install:
  - ./travis_configure.sh before_install

## Prepare build system for tests
before_script:
  - ./travis_configure.sh before_script

## Run tests, and packaging scripts
script:
  - ./travis_configure.sh run_tests

# Deploy debian packages to bintray when building for a git tag
deploy:
    provider: script
    script: beaver bintray upload -N deb/*.deb
    skip_cleanup: true
    on:
        tags: true
        repo: sociomantic-tsunami/libdrizzle-redux
        condition: $TRAVIS_OS_NAME = 'linux' && $CC = 'gcc'
