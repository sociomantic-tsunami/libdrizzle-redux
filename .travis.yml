language: cpp

## Enable cache for dependencies and directories
cache: ccache

## Enable sudo (set explicitly although environment's with docker is sudo
#  enabled by default
sudo: required

## Operating Systems to use for builds
os:
  - linux

## Ensures the virtualization environment runs as Ubuntu 14.04 Trusty
dist: trusty

## Environment variables
#
#  The 'global' section defines variables common for all jobs
env:
  global:
    - COMPILER_VERSION=
    - DIST_NAME=ubuntu
    - DIST_VERSION=xenial
    - DOCKER_COMPOSE_VERSION=1.16.1
    - DRIZZLE_TEST_EXIT_ERROR_ON_SKIP=0
    - MAKE_TARGET=check
    - MYSQL_PASSWORD=''
    - MYSQL_PORT=3306
    - MYSQL_SERVER=127.0.0.1
    - MYSQL_USER=root
    - PATH="$(git config -f .gitmodules submodule.beaver.path)/bin:$PATH"
    - SKIP_TEST_ON_ERROR=0

## Build steps for all jobs
## Install dependencies
before_install:
  - ./travis_configure.sh before_install

## Prepare build system for tests
before_script:
  - ./travis_configure.sh before_script

## Run tests, and packaging scripts
script:
  - ./travis_configure.sh run_tests

## Defines the order of the build stages.
#
#  The deployment stage is only done is building semver git tag
stages:
  - test
  - deploy

## Defines the jobs to run in each stage
#
#  Travis combines the variables defined in env.global with the variables
#  defined for each job
#
#  The resulting build matrix is as follows:
#
#  | os     | dist   | compiler  | make targets | deploy |
#  |--------|--------|-----------|--------------|--------|
#  | linux  | ubuntu | clang     | check        | no     |
#  | linux  | ubuntu | gcc       | check deb    | yes    |
#  | linux  | centos | gcc       | check rpm    | yes    |
#  | osx    | sierra | clang¹    | check        | no     |
#
#  Linux based builds are run in docker containers using docker-compose.
#
#  OSX based builds are done by a third-party provider
#
#  ¹ The compiler reported is the Apple LLVM version
jobs:
  templates:
    # Global config for builds on linux
    - &linux-build
      services:
        - docker
    # Global config for builds on osx
    - &osx-build
      os: osx
      compiler: clang
    # Global config for deployment stage
    - &deploy
      os: linux

  include:
    # Sets up the build environment, compiles the code and runs tests
    - <<: *linux-build
      env:
        COMPILER_VERSION=4.9 MAKE_TARGET=$MAKE_TARGET:deb
    - <<: *linux-build
      env:
        CXX=clang++ CC=clang COMPILER_VERSION=3.9
    - <<: *linux-build
      env:
        DIST_NAME=centos DIST_VERSION=7 MAKE_TARGET=rpm
    - <<: *osx-build
      env:
        DIST_NAME=osx

    ## Deployment stage
    - <<: *deploy
      # Deploy deb packages to bintray.
      stage: deploy
      if: tag IS present AND repo = sociomantic-tsunami/libdrizzle-redux
      env:
        COMPILER_VERSION=4.9 MAKE_TARGET=$MAKE_TARGET:deb
      after_success:
        - beaver bintray upload -D $DIST_VERSION -N pkg/deb/*.deb
